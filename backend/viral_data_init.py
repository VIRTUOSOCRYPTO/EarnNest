"""
Viral Features Data Initialization
Initialize default achievements, festivals, and challenges data
"""

from datetime import datetime, timezone, timedelta
from database import db, clean_mongo_doc
import asyncio

async def initialize_achievements():
    """Initialize default achievements"""
    
    # Check if achievements already exist
    existing_count = await db.achievements.count_documents({})
    if existing_count > 0:
        print(f"Achievements already exist ({existing_count} found), skipping initialization")
        return
    
    achievements = [
        # Savings Achievements
        {
            "id": "first_transaction",
            "name": "Getting Started",
            "name_hi": "рд╢реБрд░реБрдЖрдд",
            "name_ta": "родрпКроЯроХрпНроХроорпН",
            "description": "Record your first transaction",
            "description_hi": "рдЕрдкрдирд╛ рдкрд╣рд▓рд╛ рд▓реЗрди-рджреЗрди рджрд░реНрдЬ рдХрд░реЗрдВ",
            "description_ta": "роЙроЩрпНроХро│рпН роорпБродро▓рпН рокро░ро┐ро╡ро░рпНродрпНродройрпИропрпИ рокродро┐ро╡рпБ роЪрпЖропрпНропрпБроЩрпНроХро│рпН",
            "badge_icon": "ЁЯОп",
            "badge_color": "#10B981",
            "category": "savings",
            "points_required": 0,
            "difficulty": "easy",
            "is_active": True
        },
        {
            "id": "chai_money_saver",
            "name": "Chai Money Saver",
            "name_hi": "рдЪрд╛рдп рдХреЗ рдкреИрд╕реЗ рдмрдЪрд╛рдиреЗ рд╡рд╛рд▓рд╛",
            "name_ta": "родрпЗройрпАро░рпН рокрогроорпН роЪрпЗрооро┐рокрпНрокро╛ро│ро░рпН",
            "description": "Save тВ╣500 in a month",
            "description_hi": "рдПрдХ рдорд╣реАрдиреЗ рдореЗрдВ тВ╣500 рдмрдЪрд╛рдПрдВ",
            "description_ta": "роТро░рпБ рооро╛родродрпНродро┐ро▓рпН тВ╣500 роЪрпЗрооро┐роХрпНроХро╡рпБроорпН",
            "badge_icon": "тШХ",
            "badge_color": "#F59E0B",
            "category": "savings",
            "points_required": 500,
            "difficulty": "easy",
            "is_active": True
        },
        {
            "id": "budget_master",
            "name": "Budget Master",
            "name_hi": "рдмрдЬрдЯ рдорд╛рд╕реНрдЯрд░",
            "name_ta": "рокроЯрпНроЬрпЖроЯрпН рооро╛ро╕рпНроЯро░рпН",
            "description": "Stay within budget for 7 consecutive days",
            "description_hi": "рд▓рдЧрд╛рддрд╛рд░ 7 рджрд┐рдиреЛрдВ рддрдХ рдмрдЬрдЯ рдХреЗ рднреАрддрд░ рд░рд╣реЗрдВ",
            "description_ta": "7 родрпКроЯро░рпНроирпНрод роиро╛роЯрпНроХро│рпБроХрпНроХрпБ рокроЯрпНроЬрпЖроЯрпНроЯрпБроХрпНроХрпБро│рпН роЗро░рпБроЩрпНроХро│рпН",
            "badge_icon": "ЁЯТ░",
            "badge_color": "#8B5CF6",
            "category": "savings",
            "points_required": 0,
            "difficulty": "medium",
            "is_active": True
        },
        {
            "id": "rickshaw_rider",
            "name": "Rickshaw Rider",
            "name_hi": "рд░рд┐рдХреНрд╢рд╛ рд╕рд╡рд╛рд░",
            "name_ta": "ро░ро┐роХрпНро╖ро╛ ро░рпИроЯро░рпН",
            "description": "Use public transport 10 times to save money",
            "description_hi": "рдкреИрд╕реЗ рдмрдЪрд╛рдиреЗ рдХреЗ рд▓рд┐рдП 10 рдмрд╛рд░ рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рдкрд░рд┐рд╡рд╣рди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ",
            "description_ta": "рокрогродрпНродрпИ рооро┐роЪрпНроЪрокрпНрокроЯрпБродрпНрод 10 роорпБро▒рпИ рокрпКродрпБ рокрпЛроХрпНроХрпБро╡ро░родрпНродрпИрокрпН рокропройрпНрокроЯрпБрддреНрддрзБроЩрпНроХро│рпН",
            "badge_icon": "ЁЯЪМ",
            "badge_color": "#059669",
            "category": "savings",
            "points_required": 0,
            "difficulty": "easy",
            "is_active": True
        },
        
        # Earning Achievements
        {
            "id": "side_hustle_hero",
            "name": "Side Hustle Hero",
            "name_hi": "рд╕рд╛рдЗрдб рд╣рд╕рд▓ рд╣реАрд░реЛ",
            "name_ta": "рокроХрпНроХ ро╡рпЗро▓рпИ ро╣рпАро░рпЛ",
            "description": "Complete your first side hustle",
            "description_hi": "рдЕрдкрдирд╛ рдкрд╣рд▓рд╛ рд╕рд╛рдЗрдб рд╣рд╕рд▓ рдкреВрд░рд╛ рдХрд░реЗрдВ",
            "description_ta": "роЙроЩрпНроХро│рпН роорпБродро▓рпН рокроХрпНроХ ро╡рпЗро▓рпИропрпИ роорпБроЯро┐роХрпНроХро╡рпБроорпН",
            "badge_icon": "ЁЯТ╝",
            "badge_color": "#DC2626",
            "category": "earning",
            "points_required": 0,
            "difficulty": "medium",
            "is_active": True
        },
        {
            "id": "rupee_collector",
            "name": "Rupee Collector",
            "name_hi": "рд░реБрдкрдпрд╛ рд╕рдВрдЧреНрд░рд╛рд╣рдХ",
            "name_ta": "ро░рпВрокро╛ропрпН роЪрпЗроХро░ро┐рокрпНрокро╛ро│ро░рпН",
            "description": "Earn тВ╣1000 from side hustles",
            "description_hi": "рд╕рд╛рдЗрдб рд╣рд╕рд▓ рд╕реЗ тВ╣1000 рдХрдорд╛рдПрдВ",
            "description_ta": "рокроХрпНроХ ро╡рпЗро▓рпИроХро│ро┐ро▓рпН роЗро░рпБроирпНродрпБ тВ╣1000 роЪроорпНрокро╛родро┐роХрпНроХро╡рпБроорпН",
            "badge_icon": "ЁЯТ╕",
            "badge_color": "#7C3AED",
            "category": "earning",
            "points_required": 1000,
            "difficulty": "medium",
            "is_active": True
        },
        
        # Streak Achievements
        {
            "id": "week_warrior",
            "name": "Week Warrior",
            "name_hi": "рд╕рдкреНрддрд╛рд╣ рдпреЛрджреНрдзрд╛",
            "name_ta": "ро╡ро╛ро░ ро╡рпАро░ро░рпН",
            "description": "Login daily for 7 consecutive days",
            "description_hi": "рд▓рдЧрд╛рддрд╛рд░ 7 рджрд┐рдиреЛрдВ рддрдХ рджреИрдирд┐рдХ рд▓реЙрдЧрд┐рди",
            "description_ta": "7 родрпКроЯро░рпНроирпНрод роиро╛роЯрпНроХро│рпБроХрпНроХрпБ родро┐ройроорпБроорпН роЙро│рпН роирпБро┤рпИро╡рпБ",
            "badge_icon": "ЁЯФе",
            "badge_color": "#EF4444",
            "category": "streak",
            "points_required": 0,
            "difficulty": "easy",
            "is_active": True
        },
        {
            "id": "month_master",
            "name": "Month Master",
            "name_hi": "рдорд╣реАрдиреЗ рдХрд╛ рдорд╛рд╕реНрдЯрд░",
            "name_ta": "рооро╛род рооро╛ро╕рпНроЯро░рпН",
            "description": "Maintain 30-day login streak",
            "description_hi": "30 рджрд┐рдиреЛрдВ рдХреА рд▓реЙрдЧрд┐рди рд╕реНрдЯреНрд░реАрдХ рдмрдирд╛рдП рд░рдЦреЗрдВ",
            "description_ta": "30 роиро╛ро│рпН роЙро│рпНроирпБро┤рпИро╡рпБ ро╡ро░ро┐роЪрпИропрпИрокрпН рокро░ро╛рооро░ро┐роХрпНроХро╡рпБроорпН",
            "badge_icon": "ЁЯПЖ",
            "badge_color": "#F59E0B",
            "category": "streak",
            "points_required": 0,
            "difficulty": "hard",
            "is_active": True
        },
        
        # Social Achievements
        {
            "id": "friend_inviter",
            "name": "Friend Inviter",
            "name_hi": "рджреЛрд╕реНрдд рдЖрдордВрддреНрд░рдХ",
            "name_ta": "роирогрпНрокро░рпН роЕро┤рпИрокрпНрокро╛ро│ро░рпН",
            "description": "Invite your first friend to EarnNest",
            "description_hi": "EarnNest рдореЗрдВ рдЕрдкрдиреЗ рдкрд╣рд▓реЗ рджреЛрд╕реНрдд рдХреЛ рдЖрдордВрддреНрд░рд┐рдд рдХрд░реЗрдВ",
            "description_ta": "EarnNest роХрпНроХрпБ роЙроЩрпНроХро│рпН роорпБродро▓рпН роирогрпНрокро░рпИ роЕро┤рпИроХрпНроХро╡рпБроорпН",
            "badge_icon": "ЁЯСе",
            "badge_color": "#3B82F6",
            "category": "social",
            "points_required": 0,
            "difficulty": "easy",
            "is_active": True
        },
        {
            "id": "network_builder",
            "name": "Network Builder",
            "name_hi": "рдиреЗрдЯрд╡рд░реНрдХ рдмрд┐рд▓реНрдбрд░",
            "name_ta": "роирпЖроЯрпНро╡рпКро░рпНроХрпН рокро┐ро▓рпНроЯро░рпН",
            "description": "Successfully refer 5 friends",
            "description_hi": "рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ 5 рджреЛрд╕реНрддреЛрдВ рдХреЛ рд░реЗрдлрд░ рдХрд░реЗрдВ",
            "description_ta": "ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ 5 роирогрпНрокро░рпНроХро│рпИрокрпН рокро░ро┐роирпНродрпБро░рпИроХрпНроХро╡рпБроорпН",
            "badge_icon": "ЁЯМР",
            "badge_color": "#059669",
            "category": "social",
            "points_required": 0,
            "difficulty": "medium",
            "is_active": True
        },
        
        # Cultural Achievements
        {
            "id": "diwali_saver",
            "name": "Diwali Saver",
            "name_hi": "рджрд┐рд╡рд╛рд▓реА рд╕реЗрд╡рд░",
            "name_ta": "родрпАрокро╛ро╡ро│ро┐ роЪрпЗрооро┐рокрпНрокро╛ро│ро░рпН",
            "description": "Create and achieve Diwali festival budget",
            "description_hi": "рджрд┐рд╡рд╛рд▓реА рддреНрдпреЛрд╣рд╛рд░ рдХрд╛ рдмрдЬрдЯ рдмрдирд╛рдПрдВ рдФрд░ рдкреВрд░рд╛ рдХрд░реЗрдВ",
            "description_ta": "родрпАрокро╛ро╡ро│ро┐ родро┐ро░рпБро╡ро┐ро┤ро╛ рокроЯрпНроЬрпЖроЯрпНроЯрпИ роЙро░рпБро╡ро╛роХрпНроХро┐ роЕроЯрпИропрпБроЩрпНроХро│рпН",
            "badge_icon": "ЁЯкФ",
            "badge_color": "#F59E0B",
            "category": "cultural",
            "points_required": 0,
            "difficulty": "medium",
            "is_active": True
        },
        {
            "id": "festival_planner",
            "name": "Festival Planner",
            "name_hi": "рддреНрдпреЛрд╣рд╛рд░ рдпреЛрдЬрдирд╛рдХрд╛рд░",
            "name_ta": "родро┐ро░рпБро╡ро┐ро┤ро╛ родро┐роЯрпНроЯрооро┐роЯрпБрокро╡ро░рпН",
            "description": "Plan budgets for 3 different festivals",
            "description_hi": "3 рдЕрд▓рдЧ-рдЕрд▓рдЧ рддреНрдпреЛрд╣рд╛рд░реЛрдВ рдХреЗ рд▓рд┐рдП рдмрдЬрдЯ рдХреА рдпреЛрдЬрдирд╛ рдмрдирд╛рдПрдВ",
            "description_ta": "3 ро╡рпЖро╡рпНро╡рпЗро▒рпБ родро┐ро░рпБро╡ро┐ро┤рд╛роХрпНроХро│рпБроХрпНроХро╛рой рокроЯрпНроЬрпЖроЯрпНроЯрпБроХро│рпИродрпН родро┐роЯрпНроЯрооро┐рдбреБроЩрпНроХро│рпН",
            "badge_icon": "ЁЯОК",
            "badge_color": "#EC4899",
            "category": "cultural",
            "points_required": 0,
            "difficulty": "hard",
            "is_active": True
        }
    ]
    
    # Insert achievements
    result = await db.achievements.insert_many(achievements)
    print(f"Inserted {len(result.inserted_ids)} achievements")

async def initialize_festivals():
    """Initialize default festivals"""
    
    # Check if festivals already exist
    existing_count = await db.festivals.count_documents({})
    if existing_count > 0:
        print(f"Festivals already exist ({existing_count} found), skipping initialization")
        return
    
    current_year = datetime.now().year
    
    festivals = [
        # Pan-India Festivals
        {
            "id": "diwali_2025",
            "name": "Diwali",
            "name_hi": "рджрд┐рд╡рд╛рд▓реА",
            "name_ta": "родрпАрокро╛ро╡ро│ро┐",
            "description": "Festival of Lights - The biggest festival in India",
            "description_hi": "рд░реЛрд╢рдиреА рдХрд╛ рддреНрдпреЛрд╣рд╛рд░ - рднрд╛рд░рдд рдХрд╛ рд╕рдмрд╕реЗ рдмрдбрд╝рд╛ рддреНрдпреЛрд╣рд╛рд░",
            "description_ta": "ро╡ро┐ро│роХрпНроХрпБроХро│ро┐ройрпН родро┐ро░рпБро╡ро┐ро┤ро╛ - роЗроирпНродро┐ропро╛ро╡ро┐ройрпН рооро┐роХрокрпНрокрпЖро░ро┐роп родро┐ро░рпБро╡ро┐ро┤ро╛",
            "date": datetime(current_year, 11, 1, tzinfo=timezone.utc),
            "festival_type": "national",
            "region": "all",
            "typical_expenses": ["Shopping", "Food", "Entertainment", "Gifts", "Decorations"],
            "budget_suggestions": {
                "Shopping": 5000,
                "Food": 3000,
                "Entertainment": 2000,
                "Gifts": 4000,
                "Decorations": 1500
            },
            "is_active": True,
            "icon": "ЁЯкФ"
        },
        {
            "id": "holi_2025",
            "name": "Holi",
            "name_hi": "рд╣реЛрд▓реА",
            "name_ta": "ро╣рпЛро▓ро┐",
            "description": "Festival of Colors - Celebration of spring and love",
            "description_hi": "рд░рдВрдЧреЛрдВ рдХрд╛ рддреНрдпреЛрд╣рд╛рд░ - рд╡рд╕рдВрдд рдФрд░ рдкреНрд░реЗрдо рдХрд╛ рдЙрддреНрд╕рд╡",
            "description_ta": "ро╡рогрпНрогроЩрпНроХро│ро┐ройрпН родро┐ро░рпБро╡ро┐ро┤ро╛ - ро╡роЪрдВрдд рооро▒рпНро▒рпБроорпН роЕройрпНрокро┐ройрпН роХрпКрогрпНроЯро╛роЯрпНроЯроорпН",
            "date": datetime(current_year, 3, 14, tzinfo=timezone.utc),
            "festival_type": "national",
            "region": "all",
            "typical_expenses": ["Colors", "Food", "Entertainment", "Gifts"],
            "budget_suggestions": {
                "Colors": 500,
                "Food": 1500,
                "Entertainment": 1000,
                "Gifts": 1000
            },
            "is_active": True,
            "icon": "ЁЯОи"
        },
        {
            "id": "eid_2025",
            "name": "Eid ul-Fitr",
            "name_hi": "рдИрдж рдЙрд▓-рдлрд╝рд┐рддреНрд░",
            "name_ta": "роИродрпН роЙро▓рпН-роГрокро┐родрпНро░рпН",
            "description": "Festival marking the end of Ramadan",
            "description_hi": "рд░рдордЬрд╝рд╛рди рдХреЗ рдЕрдВрдд рдХрд╛ рддреНрдпреЛрд╣рд╛рд░",
            "description_ta": "ро░рооро▓ро╛ройро┐ройрпН роорпБроЯро┐ро╡рпИроХрпН роХрпБро▒ро┐роХрпНроХрпБроорпН родро┐ро░рпБро╡ро┐ро┤ро╛",
            "date": datetime(current_year, 4, 10, tzinfo=timezone.utc),
            "festival_type": "religious",
            "region": "all",
            "typical_expenses": ["Shopping", "Food", "Gifts", "Charity"],
            "budget_suggestions": {
                "Shopping": 3000,
                "Food": 2500,
                "Gifts": 2000,
                "Charity": 1000
            },
            "is_active": True,
            "icon": "ЁЯМЩ"
        },
        
        # Regional Festivals
        {
            "id": "durga_puja_2025",
            "name": "Durga Puja",
            "name_hi": "рджреБрд░реНрдЧрд╛ рдкреВрдЬрд╛",
            "name_ta": "родрпБро░рпНроХро╛ рокрпВроЬрпИ",
            "description": "Bengali festival honoring Goddess Durga",
            "description_hi": "рджреЗрд╡реА рджреБрд░реНрдЧрд╛ рдХрд╛ рд╕рдореНрдорд╛рди рдХрд░рдиреЗ рд╡рд╛рд▓рд╛ рдмрдВрдЧрд╛рд▓реА рддреНрдпреЛрд╣рд╛рд░",
            "description_ta": "родрпБро░рпНроХро╛ родрпЗро╡ро┐ропрпИ роХрпКрогрпНроЯро╛роЯрпБроорпН ро╡роЩрпНроХро╛ро│ родро┐ро░рпБро╡ро┐ро┤ро╛",
            "date": datetime(current_year, 10, 10, tzinfo=timezone.utc),
            "festival_type": "regional",
            "region": "east",
            "typical_expenses": ["Shopping", "Food", "Entertainment", "Pandal_Hopping"],
            "budget_suggestions": {
                "Shopping": 4000,
                "Food": 3000,
                "Entertainment": 2000,
                "Pandal_Hopping": 1500
            },
            "is_active": True,
            "icon": "ЁЯЩП"
        },
        {
            "id": "onam_2025",
            "name": "Onam",
            "name_hi": "рдУрдгрдо",
            "name_ta": "роУрогроорпН",
            "description": "Kerala harvest festival",
            "description_hi": "рдХреЗрд░рд▓ рдХрд╛ рдлрд╕рд▓ рддреНрдпреЛрд╣рд╛рд░",
            "description_ta": "роХрпЗро░ро│ро╛ро╡ро┐ройрпН роЕро▒рпБро╡роЯрпИ родро┐ро░рпБро╡ро┐ро┤ро╛",
            "date": datetime(current_year, 8, 15, tzinfo=timezone.utc),
            "festival_type": "regional",
            "region": "south",
            "typical_expenses": ["Sadhya", "Shopping", "Flowers", "Entertainment"],
            "budget_suggestions": {
                "Sadhya": 2000,
                "Shopping": 3000,
                "Flowers": 500,
                "Entertainment": 1500
            },
            "is_active": True,
            "icon": "ЁЯМ╛"
        },
        
        # Modern Celebrations
        {
            "id": "valentine_2025",
            "name": "Valentine's Day",
            "name_hi": "рд╡реИрд▓реЗрдВрдЯрд╛рдЗрди рдбреЗ",
            "name_ta": "роХро╛родро▓ро░рпН родро┐ройроорпН",
            "description": "Day of love and romance",
            "description_hi": "рдкреНрд░реЗрдо рдФрд░ рд░реЛрдорд╛рдВрд╕ рдХрд╛ рджрд┐рди",
            "description_ta": "роЕройрпНрокрпБ рооро▒рпНро▒рпБроорпН роХро╛родро▓ро┐ройрпН роиро╛ро│рпН",
            "date": datetime(current_year, 2, 14, tzinfo=timezone.utc),
            "festival_type": "modern",
            "region": "all",
            "typical_expenses": ["Gifts", "Dining", "Movies", "Flowers"],
            "budget_suggestions": {
                "Gifts": 2000,
                "Dining": 1500,
                "Movies": 800,
                "Flowers": 500
            },
            "is_active": True,
            "icon": "тЭдя╕П"
        },
        {
            "id": "new_year_2025",
            "name": "New Year",
            "name_hi": "рдирд╡ рд╡рд░реНрд╖",
            "name_ta": "рокрпБродрпНродро╛рогрпНроЯрпБ",
            "description": "Celebration of the new calendar year",
            "description_hi": "рдирдП рдХреИрд▓реЗрдВрдбрд░ рд╡рд░реНрд╖ рдХрд╛ рдЙрддреНрд╕рд╡",
            "description_ta": "рокрпБродро┐роп роиро╛роЯрпНроХро╛роЯрпНроЯро┐ роЖрогрпНроЯро┐ройрпН роХрпКрогрпНроЯро╛роЯрпНроЯроорпН",
            "date": datetime(current_year, 12, 31, tzinfo=timezone.utc),
            "festival_type": "modern",
            "region": "all",
            "typical_expenses": ["Party", "Food", "Entertainment", "Gifts"],
            "budget_suggestions": {
                "Party": 3000,
                "Food": 2000,
                "Entertainment": 2500,
                "Gifts": 1500
            },
            "is_active": True,
            "icon": "ЁЯОЙ"
        },
        
        # Additional Regional Festivals
        {
            "id": "karva_chauth_2025",
            "name": "Karva Chauth",
            "name_hi": "рдХрд░рд╡рд╛ рдЪреМрде",
            "name_ta": "роХро░рпНро╡ро╛ роЪрпМродрпН",
            "description": "Festival for married women's prayers for husband's long life",
            "description_hi": "рд╡рд┐рд╡рд╛рд╣рд┐рдд рдорд╣рд┐рд▓рд╛рдУрдВ рджреНрд╡рд╛рд░рд╛ рдкрддрд┐ рдХреА рд▓рдВрдмреА рдЖрдпреБ рдХреЗ рд▓рд┐рдП рдкреНрд░рд╛рд░реНрдердирд╛ рдХрд╛ рддреНрдпреЛрд╣рд╛рд░",
            "description_ta": "родро┐ро░рпБроорогрооро╛рой рокрпЖрогрпНроХро│рпН роХрогро╡ро░ро┐ройрпН роирпАрогрпНроЯ роЖропрпБро│рпБроХрпНроХро╛роХ рокро┐ро░ро╛ро░рпНродрпНродройрпИ роЪрпЖропрпНропрпБроорпН родро┐ро░рпБро╡ро┐ро┤ро╛",
            "date": datetime(current_year, 10, 20, tzinfo=timezone.utc),
            "festival_type": "regional",
            "region": "north",
            "typical_expenses": ["Shopping", "Gifts", "Food", "Jewelry"],
            "budget_suggestions": {
                "Shopping": 3000,
                "Gifts": 2000,
                "Food": 1500,
                "Jewelry": 5000
            },
            "is_active": True,
            "icon": "ЁЯТЭ"
        }
    ]
    
    # Insert festivals
    result = await db.festivals.insert_many(festivals)
    print(f"Inserted {len(result.inserted_ids)} festivals")

async def initialize_challenges():
    """Initialize default challenges"""
    
    # Check if challenges already exist
    existing_count = await db.challenges.count_documents({})
    if existing_count > 0:
        print(f"Challenges already exist ({existing_count} found), skipping initialization")
        return
    
    now = datetime.now(timezone.utc)
    
    challenges = [
        {
            "id": "save_1000_30_days",
            "name": "Save тВ╣1000 in 30 Days",
            "name_hi": "30 рджрд┐рдиреЛрдВ рдореЗрдВ тВ╣1000 рдмрдЪрд╛рдПрдВ",
            "name_ta": "30 роиро╛роЯрпНроХро│ро┐ро▓рпН тВ╣1000 роЪрпЗрооро┐роХрпНроХро╡рпБроорпН",
            "description": "Challenge yourself to save тВ╣1000 in the next 30 days",
            "description_hi": "рдЕрдЧрд▓реЗ 30 рджрд┐рдиреЛрдВ рдореЗрдВ тВ╣1000 рдмрдЪрд╛рдиреЗ рдХреА рдЪреБрдиреМрддреА рд▓реЗрдВ",
            "description_ta": "роЕроЯрпБродрпНрод 30 роиро╛роЯрпНроХро│ро┐ро▓рпН тВ╣1000 роЪрпЗрооро┐роХрпНроХ роЙроЩрпНроХро│рпИ роЪро╡ро╛ро▓рпН роЪрпЖропрпНропрпБроЩрпНроХро│рпН",
            "challenge_type": "saving",
            "target_value": 1000.0,
            "target_unit": "rupees",
            "duration_days": 30,
            "reward_coins": 100,
            "start_date": now,
            "end_date": now + timedelta(days=30),
            "is_active": True,
            "difficulty": "medium",
            "icon": "ЁЯТ░"
        },
        {
            "id": "no_swiggy_september",
            "name": "No Swiggy September",
            "name_hi": "рдиреЛ рд╕реНрд╡рд┐рдЧреА рд╕рд┐рддрдВрдмрд░",
            "name_ta": "роирпЛ ро╕рпНро╡ро┐роХро┐ роЪрпЖрокрпНроЯроорпНрокро░рпН",
            "description": "Avoid food delivery for the entire month of September",
            "description_hi": "рд╕рд┐рддрдВрдмрд░ рдХреЗ рдкреВрд░реЗ рдорд╣реАрдиреЗ рдлреВрдб рдбрд┐рд▓реАрд╡рд░реА рд╕реЗ рдмрдЪреЗрдВ",
            "description_ta": "роЪрпЖрокрпНроЯроорпНрокро░рпН рооро╛родроорпН роорпБро┤рпБро╡родрпБроорпН роЙрогро╡рпБ ро╡ро┐роиро┐ропрпЛроХродрпНродрпИ родро╡ро┐ро░рпНроХрпНроХро╡рпБроорпН",
            "challenge_type": "saving",
            "target_value": 30.0,
            "target_unit": "days",
            "duration_days": 30,
            "reward_coins": 150,
            "start_date": now,
            "end_date": now + timedelta(days=30),
            "is_active": True,
            "difficulty": "hard",
            "icon": "ЁЯЪл"
        },
        {
            "id": "earn_5000_hustle",
            "name": "Earn тВ╣5000 from Side Hustles",
            "name_hi": "рд╕рд╛рдЗрдб рд╣рд╕рд▓ рд╕реЗ тВ╣5000 рдХрдорд╛рдПрдВ",
            "name_ta": "рокроХрпНроХ ро╡рпЗро▓рпИроХро│ро┐ро▓рпН роЗро░рпБроирпНродрпБ тВ╣5000 роЪроорпНрокро╛родро┐роХрпНроХро╡рпБроорпН",
            "description": "Complete side hustles to earn тВ╣5000 in 60 days",
            "description_hi": "60 рджрд┐рдиреЛрдВ рдореЗрдВ тВ╣5000 рдХрдорд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рд╛рдЗрдб рд╣рд╕рд▓ рдкреВрд░рд╛ рдХрд░реЗрдВ",
            "description_ta": "60 роиро╛роЯрпНроХро│ро┐ро▓рпН тВ╣5000 роЪроорпНрокро╛родро┐роХрпНроХ рокроХрпНроХ ро╡рпЗро▓рпИроХро│рпИ роорпБроЯро┐роХрпНроХро╡рпБроорпН",
            "challenge_type": "earning",
            "target_value": 5000.0,
            "target_unit": "rupees",
            "duration_days": 60,
            "reward_coins": 300,
            "start_date": now,
            "end_date": now + timedelta(days=60),
            "is_active": True,
            "difficulty": "hard",
            "icon": "ЁЯТ╝"
        },
        {
            "id": "daily_login_streak_21",
            "name": "21-Day Login Streak",
            "name_hi": "21-рджрд┐рди рд▓реЙрдЧрд┐рди рд╕реНрдЯреНрд░реАрдХ",
            "name_ta": "21-роиро╛ро│рпН роЙро│рпНроирпБро┤рпИро╡рпБ ро╡ро░ро┐роЪрпИ",
            "description": "Login daily for 21 consecutive days",
            "description_hi": "рд▓рдЧрд╛рддрд╛рд░ 21 рджрд┐рдиреЛрдВ рддрдХ рджреИрдирд┐рдХ рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ",
            "description_ta": "21 родрпКроЯро░рпНроирпНрод роиро╛роЯрпНроХро│рпБроХрпНроХрпБ родро┐ройроорпБроорпН роЙро│рпНроиреБро┤рпИро╡рпБ роЪрпЖропрпНропрпБроЩрпНроХро│рпН",
            "challenge_type": "streak",
            "target_value": 21.0,
            "target_unit": "days",
            "duration_days": 21,
            "reward_coins": 75,
            "start_date": now,
            "end_date": now + timedelta(days=21),
            "is_active": True,
            "difficulty": "medium",
            "icon": "ЁЯФе"
        },
        {
            "id": "refer_3_friends",
            "name": "Refer 3 Friends",
            "name_hi": "3 рджреЛрд╕реНрддреЛрдВ рдХреЛ рд░реЗрдлрд░ рдХрд░реЗрдВ",
            "name_ta": "3 роирогрпНрокро░рпНроХро│рпИ рокро░ро┐роирпНродрпБро░рпИроХрпНроХро╡рпБроорпН",
            "description": "Successfully refer 3 friends to EarnNest",
            "description_hi": "EarnNest рдореЗрдВ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ 3 рджреЛрд╕реНрддреЛрдВ рдХреЛ рд░реЗрдлрд░ рдХрд░реЗрдВ",
            "description_ta": "EarnNest роХрпНроХрпБ ро╡рпЖро▒рпНро▒ро┐роХ╪▒рооро╛роХ 3 роирогрпНрокро░рпНроХро│рпИ рокро░ро┐роирпНродрпБро░рпИроХреНрдХрд╡рпБроорпН",
            "challenge_type": "social",
            "target_value": 3.0,
            "target_unit": "referrals",
            "duration_days": 30,
            "reward_coins": 200,
            "start_date": now,
            "end_date": now + timedelta(days=30),
            "is_active": True,
            "difficulty": "medium",
            "icon": "ЁЯСе"
        }
    ]
    
    # Insert challenges
    result = await db.challenges.insert_many(challenges)
    print(f"Inserted {len(result.inserted_ids)} challenges")

async def main():
    """Main function to initialize all viral features data"""
    print("ЁЯЪА Initializing Viral Features Data...")
    
    try:
        await initialize_achievements()
        await initialize_festivals()
        await initialize_challenges()
        print("тЬЕ All viral features data initialized successfully!")
        
    except Exception as e:
        print(f"тЭМ Error initializing data: {str(e)}")

if __name__ == "__main__":
    asyncio.run(main())
